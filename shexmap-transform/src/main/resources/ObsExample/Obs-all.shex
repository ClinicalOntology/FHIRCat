PREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
BASE <http://hl7.org/fhir/shape/>

start=@<Observation> AND {fhir:nodeRole [fhir:treeRoot]}


# Measurements and simple assertions
<Observation> CLOSED {
    a [fhir:Observation];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:Resource.id @<id>?;                # Logical id of this artifact
    fhir:Resource.meta @<Meta>?;            # Metadata about the resource
    fhir:Resource.implicitRules @<uri>?;    # A set of rules under which this 
                                            # content was created 
    fhir:Resource.language @<code>?;        # Language of the resource content
    fhir:DomainResource.text @<Narrative>?;  # Text summary of the resource, for 
                                            # human interpretation 
    fhir:DomainResource.contained @<Resource>*;  # Contained, inline Resources
    fhir:DomainResource.extension @<Extension>*;  # Additional content defined by 
                                            # implementations 
    fhir:DomainResource.modifierExtension @<Extension>*;  # Extensions that cannot be ignored
    fhir:Observation.identifier @<Identifier>*;  # Business Identifier for observation
    (                                       # Instantiates FHIR 
                                            # ObservationDefinition 
        fhir:Observation.instantiatesCanonical @<canonical>  |
        fhir:Observation.instantiatesReference @<Reference> 
    )?;
    fhir:Observation.basedOn @<Reference>*;  # Fulfills plan, proposal or order
    fhir:Observation.triggeredBy @<Observation.triggeredBy>*;  # Triggering observation(s)
    fhir:Observation.partOf @<Reference>*;  # Part of referenced event
    fhir:Observation.status @<code> AND
    	{fhir:value @fhirvs:observation-status};  # registered | preliminary | final | 
                                            # amended + 
    fhir:Observation.category @<CodeableConcept>*;  # Classification of  type of 
                                            # observation 
    fhir:Observation.code @<CodeableConcept>;  # Type of observation (code / type)
    fhir:Observation.subject @<Reference>?;  # Who and/or what the observation is 
                                            # about 
    fhir:Observation.focus @<Reference>*;   # What the observation is about, 
                                            # when it is not about the subject 
                                            # of record 
    fhir:Observation.encounter @<Reference>?;  # Healthcare event during which this 
                                            # observation is made 
    (                                       # Clinically relevant 
                                            # time/time-period for observation 
        fhir:Observation.effectiveDateTime @<dateTime>  |
        fhir:Observation.effectivePeriod @<Period>  |
        fhir:Observation.effectiveTiming @<Timing>  |
        fhir:Observation.effectiveInstant @<instant> 
    )?;
    fhir:Observation.issued @<instant>?;    # Date/Time this version was made 
                                            # available 
    fhir:Observation.performer @<Reference>*;  # Who is responsible for the 
                                            # observation 
    (                                       # Actual result
        fhir:Observation.valueQuantity @<Quantity>  |
        fhir:Observation.valueCodeableConcept @<CodeableConcept>  |
        fhir:Observation.valueString @<string>  |
        fhir:Observation.valueBoolean @<boolean>  |
        fhir:Observation.valueInteger @<integer>  |
        fhir:Observation.valueRange @<Range>  |
        fhir:Observation.valueRatio @<Ratio>  |
        fhir:Observation.valueSampledData @<SampledData>  |
        fhir:Observation.valueTime @<time>  |
        fhir:Observation.valueDateTime @<dateTime>  |
        fhir:Observation.valuePeriod @<Period>  |
        fhir:Observation.valueAttachment @<Attachment> 
    )?;
    fhir:Observation.dataAbsentReason @<CodeableConcept>?;  # Why the result is missing
    fhir:Observation.interpretation @<CodeableConcept>*;  # High, low, normal, etc.
    fhir:Observation.note @<Annotation>*;   # Comments about the observation
    fhir:Observation.bodySite @<CodeableConcept>?;  # Observed body part
    fhir:Observation.bodyStructure @<Reference>?;  # Observed body structure
    fhir:Observation.method @<CodeableConcept>?;  # How it was done
    fhir:Observation.specimen @<Reference>?;  # Specimen used for this observation
    fhir:Observation.device @<Reference>?;  # (Measurement) Device
    fhir:Observation.referenceRange @<Observation.referenceRange>*;  # Provides guide for interpretation
    fhir:Observation.hasMember @<Reference>*;  # Related resource that belongs to 
                                            # the Observation group 
    fhir:Observation.derivedFrom @<Reference>*;  # Related resource from which the 
                                            # observation is made 
    fhir:Observation.component @<Observation.component>*;  # Component results
    fhir:index xsd:integer?                 # Relative position in a list
}

# Triggering observation(s)
<Observation.triggeredBy> CLOSED {
    fhir:Element.id @<id>?;                 # Unique id for inter-element 
                                            # referencing 
    fhir:Element.extension @<Extension>*;   # Additional content defined by 
                                            # implementations 
    fhir:BackboneElement.modifierExtension @<Extension>*;  # Extensions that cannot be ignored 
                                            # even if unrecognized 
    fhir:Observation.triggeredBy.observation @<Reference>;  # Triggering observation
    fhir:Observation.triggeredBy.type @<code> AND
    	{fhir:value @fhirvs:observation-triggeredbytype};  # reflex | repeat | re-run
    fhir:Observation.triggeredBy.reason @<string>?;  # Reason that the observation was 
                                            # triggered 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Provides guide for interpretation
<Observation.referenceRange> CLOSED {
    fhir:Element.id @<id>?;                 # Unique id for inter-element 
                                            # referencing 
    fhir:Element.extension @<Extension>*;   # Additional content defined by 
                                            # implementations 
    fhir:BackboneElement.modifierExtension @<Extension>*;  # Extensions that cannot be ignored 
                                            # even if unrecognized 
    fhir:Observation.referenceRange.low @<SimpleQuantity>?;  # Low Range, if relevant
    fhir:Observation.referenceRange.high @<SimpleQuantity>?;  # High Range, if relevant
    fhir:Observation.referenceRange.normalValue @<CodeableConcept>?;  # Normal value, if relevant
    fhir:Observation.referenceRange.type @<CodeableConcept>?;  # Reference range qualifier
    fhir:Observation.referenceRange.appliesTo @<CodeableConcept>*;  # Reference range population
    fhir:Observation.referenceRange.age @<Range>?;  # Applicable age range, if relevant
    fhir:Observation.referenceRange.text @<string>?;  # Text based reference range in an 
                                            # observation 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Component results
<Observation.component> CLOSED {
    fhir:Element.id @<id>?;                 # Unique id for inter-element 
                                            # referencing 
    fhir:Element.extension @<Extension>*;   # Additional content defined by 
                                            # implementations 
    fhir:BackboneElement.modifierExtension @<Extension>*;  # Extensions that cannot be ignored 
                                            # even if unrecognized 
    fhir:Observation.component.code @<CodeableConcept>;  # Type of component observation 
                                            # (code / type) 
    (                                       # Actual component result
        fhir:Observation.component.valueQuantity @<Quantity>  |
        fhir:Observation.component.valueCodeableConcept @<CodeableConcept>  |
        fhir:Observation.component.valueString @<string>  |
        fhir:Observation.component.valueBoolean @<boolean>  |
        fhir:Observation.component.valueInteger @<integer>  |
        fhir:Observation.component.valueRange @<Range>  |
        fhir:Observation.component.valueRatio @<Ratio>  |
        fhir:Observation.component.valueSampledData @<SampledData>  |
        fhir:Observation.component.valueTime @<time>  |
        fhir:Observation.component.valueDateTime @<dateTime>  |
        fhir:Observation.component.valuePeriod @<Period>  |
        fhir:Observation.component.valueAttachment @<Attachment> 
    )?;
    fhir:Observation.component.dataAbsentReason @<CodeableConcept>?;  # Why the component result is missing
    fhir:Observation.component.interpretation @<CodeableConcept>*;  # High, low, normal, etc.
    fhir:Observation.component.referenceRange @<Observation.component.referenceRange>*;  # Provides guide for interpretation 
                                            # of component result 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Provides guide for interpretation of component result
<Observation.component.referenceRange> CLOSED {
    fhir:index xsd:integer?                 # Relative position in a list
}

